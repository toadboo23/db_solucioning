# Versión de PRODUCCIÓN con PostgreSQL en Docker
# Todos los servicios en contenedores Docker

version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: solucioning_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: employee_management
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: SolucioningSecurePass2024!
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - solucioning_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: solucioning_backend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://postgres:SolucioningSecurePass2024!@postgres:5432/employee_management
      SESSION_SECRET: SolucioningSecretKey2024!
      PORT: 5173
    ports:
      - "5173:5173"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - solucioning_network

  # Frontend
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: solucioning_frontend
    restart: unless-stopped
    environment:
      NODE_ENV: production
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - solucioning_network

  # pgAdmin
  pgadmin:
    image: dpage/pgadmin4:8.6
    container_name: solucioning_pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@solucioning.local
      PGADMIN_DEFAULT_PASSWORD: admin2024
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    networks:
      - solucioning_network
    depends_on:
      - postgres
    volumes:
      - pgadmin_data:/var/lib/pgadmin

volumes:
  postgres_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  solucioning_network:
    driver: bridge 