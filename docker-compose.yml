# Versi√≥n de DESARROLLO con PostgreSQL en Docker
# Todos los servicios en contenedores Docker

version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: solucioning_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-employee_management}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-dev_password}
      POSTGRES_HOST_AUTH_METHOD: ${POSTGRES_HOST_AUTH_METHOD:-trust}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - solucioning_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API - Modo Desarrollo
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: solucioning_backend
    restart: unless-stopped
    environment:
      NODE_ENV: ${NODE_ENV:-development}
      DATABASE_URL: ${DATABASE_URL:-postgresql://postgres:dev_password@postgres:5432/employee_management}
      SESSION_SECRET: ${SESSION_SECRET:-dev_session_secret}
      PORT: ${PORT:-5173}
    volumes:
      - ./server:/app/server
      - ./shared:/app/shared
      - ./drizzle.config.ts:/app/drizzle.config.ts
      - /app/node_modules
    ports:
      - "5173:5173"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - solucioning_network
    command: npm run dev:backend

  # Frontend - Con Nginx para proxy
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend.nginx
    container_name: solucioning_frontend
    restart: unless-stopped
    environment:
      NODE_ENV: ${NODE_ENV:-production}
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - solucioning_network

  # pgAdmin
  pgadmin:
    image: dpage/pgadmin4:8.6
    container_name: solucioning_pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-admin@solucioning.local}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin2024}
      PGADMIN_CONFIG_SERVER_MODE: ${PGADMIN_CONFIG_SERVER_MODE:-False}
    ports:
      - "5050:80"
    networks:
      - solucioning_network
    depends_on:
      - postgres
    volumes:
      - pgadmin_data:/var/lib/pgadmin

volumes:
  postgres_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  solucioning_network:
    driver: bridge 